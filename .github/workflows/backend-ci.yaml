name: Movie Picture Backend Continuous Integration

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:
      
  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main

env:
  PYTHON_VERSION: '3.11'
  CACHE_NAME: 'cache-python'

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('starter/backend/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.CACHE_NAME }}-

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Install pipenv
      run: pip install pipenv

    - name: Verify pipenv installation
      run: pipenv --version

    - name: Install project dependencies
      run: pipenv install --dev

    - name: Run lint
      run: pipenv run lint

  test:
    name: Testing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: starter/backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('starter/backend/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.CACHE_NAME }}-

    - name: Install pipenv
      run: pip install pipenv

    - name: Install project dependencies
      run: pipenv install --dev

    - name: Run tests
      run: pipenv run test

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [lint, test]
    defaults:
      run:
        working-directory: starter/backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker Image
      run: |
        docker build -t mp-backend:latest .